{"version":3,"sources":["components/Jumbo/Jumbo.js","components/Table/Table.js","components/Wrapper/Wrapper.js","App.js","index.js"],"names":["Jumbo","className","Table","state","search","employees","handleSearch","event","value","target","name","setState","sortNames","sortedEmployees","sort","a","b","sortID","id","sortEmail","email","sortPhone","phone","fetch","then","response","json","emps","onChange","this","type","placeholder","aria-label","aria-describedby","scope","onClick","filter","emp","toLowerCase","includes","map","Component","Wrapper","props","children","App","ReactDOM","render","document","getElementById"],"mappings":"2MAaeA,MAVf,WACI,OACI,qBAAKC,UAAU,uCAAf,SACI,qBAAKA,UAAU,mBAAf,SACE,oBAAIA,UAAU,wBAAd,sC,mCCkFCC,E,4MArFTC,MAAO,CACLC,OAAQ,GACRC,UAAW,I,EASbC,aAAe,SAAAC,GACb,IAAIC,EAAQD,EAAME,OAAOD,MACnBE,EAAOH,EAAME,OAAOC,KAE1B,EAAKC,SAAL,eAEKD,EAAOF,K,EAKdI,UAAY,WACV,IAAMC,EAAkB,EAAKV,MAAME,UAAUS,MAAK,SAACC,EAAEC,GAAH,OAASD,EAAEL,KAAOM,EAAEN,KAAO,GAAK,KAClF,EAAKC,SAASE,I,EAGhBI,OAAS,WACP,IAAMJ,EAAkB,EAAKV,MAAME,UAAUS,MAAK,SAACC,EAAEC,GAAH,OAASD,EAAEG,GAAKF,EAAEE,GAAK,GAAK,KAC9E,EAAKP,SAASE,I,EAGhBM,UAAY,WACV,IAAMN,EAAkB,EAAKV,MAAME,UAAUS,MAAK,SAACC,EAAEC,GAAH,OAASD,EAAEK,MAAQJ,EAAEI,MAAQ,GAAK,KACpF,EAAKT,SAASE,I,EAGhBQ,UAAY,WACV,IAAMR,EAAkB,EAAKV,MAAME,UAAUS,MAAK,SAACC,EAAEC,GAAH,OAASD,EAAEO,MAAQN,EAAEM,MAAQ,GAAK,KACpF,EAAKX,SAASE,I,kEAlCK,IAAD,OAClBU,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKhB,SAAS,CAACN,UAAWsB,S,+BAmCjC,IAAD,OACJ,OACE,qCACA,qBAAK1B,UAAU,sBAAf,SACI,uBAAO2B,SAAUC,KAAKvB,aAAcI,KAAK,SAASF,MAAOqB,KAAK1B,MAAMC,OAAQ0B,KAAK,OAAO7B,UAAU,eAAe8B,YAAY,6BAA6BC,aAAW,WAAWC,mBAAiB,qBAErM,qBAAKhC,UAAU,sBAAf,SACI,wBAAOA,UAAU,QAAjB,UACQ,gCACE,+BACE,oBAAIiC,MAAM,MAAV,SAAgB,wBAAQjC,UAAU,kBAAkBkC,QAASN,KAAKZ,OAAlD,iBAChB,oBAAIiB,MAAM,MAAV,SAAgB,wBAAQjC,UAAU,kBAAkBkC,QAASN,KAAKjB,UAAlD,oBAChB,oBAAIsB,MAAM,MAAV,SAAgB,wBAAQjC,UAAU,kBAAkBkC,QAASN,KAAKV,UAAlD,qBAChB,oBAAIe,MAAM,MAAV,SAAgB,wBAAQjC,UAAU,kBAAkBkC,QAASN,KAAKR,UAAlD,0BAGpB,gCACCQ,KAAK1B,MAAME,UAAU+B,QACd,SAAAC,GAAG,OACDA,EAAI3B,KAAK4B,cAAcC,SAAS,EAAKpC,MAAMC,OAAOkC,gBAElDD,EAAIjB,MAAMkB,cAAcC,SAAS,EAAKpC,MAAMC,OAAOkC,gBAEnDD,EAAIf,MAAMiB,SAAS,EAAKpC,MAAMC,WAEtCoC,KAAI,SAAAH,GAAG,OACH,+BACE,oBAAIH,MAAM,MAAV,SAAiBG,EAAInB,KACrB,6BAAKmB,EAAI3B,OACT,6BAAK2B,EAAIjB,QACT,6BAAKiB,EAAIf,UAJFe,EAAInB,qB,GAtEvBuB,aCGLC,MAJf,SAAiBC,GACf,OAAO,qBAAK1C,UAAU,kBAAf,SAAkC0C,EAAMC,YCYlCC,MAVf,WACI,OACE,eAAC,EAAD,WACI,cAAC,EAAD,IACA,cAAC,EAAD,QCFVC,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.77e1ae00.chunk.js","sourcesContent":["import React from \"react\";\nimport './jumbo-style.css';\n\nfunction Jumbo() {\n    return (\n        <div className=\"jumbotron jumbotron-fluid bg-primary\">\n            <div className=\"container center\">\n              <h1 className=\"display-4 text-center\">Employees Directory</h1>\n            </div>\n        </div>\n    );\n}\n\nexport default Jumbo;","import React, { Component } from \"react\";\n\n\nclass Table extends Component {\n      state= {\n        search: \"\",\n        employees: []\n      }\n\n      componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => response.json())\n        .then(emps => this.setState({employees: emps}));\n      }\n\n      handleSearch = event => {\n        let value = event.target.value;\n        const name = event.target.name;\n        \n        this.setState(\n          {\n            [name]: value,\n          }\n        );\n      }\n\n      sortNames = () => {\n        const sortedEmployees = this.state.employees.sort((a,b)=>  a.name > b.name ? 1 : -1 );\n        this.setState(sortedEmployees);\n      }\n\n      sortID = () => {\n        const sortedEmployees = this.state.employees.sort((a,b)=>  a.id > b.id ? 1 : -1 );\n        this.setState(sortedEmployees);\n      }\n\n      sortEmail = () => {\n        const sortedEmployees = this.state.employees.sort((a,b)=>  a.email > b.email ? 1 : -1 );\n        this.setState(sortedEmployees);\n      }\n\n      sortPhone = () => {\n        const sortedEmployees = this.state.employees.sort((a,b)=>  a.phone > b.phone ? 1 : -1 );\n        this.setState(sortedEmployees);\n      }\n\n\n      render(){\n          return (\n            <>\n            <div className=\"input-group mx-auto\">\n                <input onChange={this.handleSearch} name=\"search\" value={this.state.search} type=\"text\" className=\"form-control\" placeholder=\"Search by name/email/phone\" aria-label=\"Username\" aria-describedby=\"addon-wrapping\" />\n            </div>\n            <div className=\"table-responsive-md\">\n                <table className=\"table\">\n                        <thead>\n                          <tr>\n                            <th scope=\"col\"><button className=\"btn btn-primary\" onClick={this.sortID}>#</button></th>\n                            <th scope=\"col\"><button className=\"btn btn-primary\" onClick={this.sortNames}>Name</button></th>\n                            <th scope=\"col\"><button className=\"btn btn-primary\" onClick={this.sortEmail}>email</button></th>\n                            <th scope=\"col\"><button className=\"btn btn-primary\" onClick={this.sortPhone}>Phone</button></th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                        {this.state.employees.filter(\n                                emp => (\n                                  emp.name.toLowerCase().includes(this.state.search.toLowerCase())\n                                  ||\n                                  emp.email.toLowerCase().includes(this.state.search.toLowerCase())\n                                  ||\n                                  emp.phone.includes(this.state.search)\n                                )\n                        ).map(emp => (\n                              <tr key={emp.id}>\n                                <th scope=\"row\">{emp.id}</th>\n                                <td>{emp.name}</td>\n                                <td>{emp.email}</td>\n                                <td>{emp.phone}</td>\n                              </tr>\n                        ))\n                        } \n                        </tbody>\n                </table>\n            </div>\n            </>\n          );\n      }\n}\n\nexport default Table;","import React from \"react\";\n\nfunction Wrapper(props) {\n  return <div className=\"container-fluid\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport Jumbo from './components/Jumbo/Jumbo.js';\nimport Table from './components/Table/Table.js';\nimport Wrapper from './components/Wrapper/Wrapper.js';\n\nfunction App() {\n    return (\n      <Wrapper>\n          <Jumbo />\n          <Table />\n      </Wrapper>\n    );\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n//import './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />, \n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}